name: Backend CI

on:
  push:
    branches: [ main, 'feature/*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: nexus
          POSTGRES_PASSWORD: pass01
          POSTGRES_DB: social_media
        options: >-
          --health-cmd "pg_isready -U nexus -d social_media"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping | grep PONG"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t backend-test .

      - name: Run migrations and tests
        run: |
          docker run --rm \
            -e POSTGRES_USER=nexus \
            -e POSTGRES_PASSWORD=pass01 \
            -e POSTGRES_DB=social_media \
            -e DATABASE_HOST=db \
            -e REDIS_URL=redis://redis:6379/0 \
            -e CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672// \
            -e CELERY_RESULT_BACKEND=redis://redis:6379/2 \
            backend-test \
            bash -c "\
              echo 'Waiting for Postgres...' && \
              until pg_isready -h db -U \$POSTGRES_USER; do sleep 2; done && \
              echo 'Waiting for Redis...' && \
              until redis-cli -h redis ping | grep PONG; do sleep 2; done && \
              echo 'Waiting for RabbitMQ...' && \
              until rabbitmqctl -q status; do sleep 2; done && \
              echo 'Running migrations...' && python manage.py migrate && \
              echo 'Running Django tests...' && python manage.py test && \
              echo 'Running Celery tests...' && \
              celery -A social_media_feed worker --loglevel=INFO --detach && \
              python manage.py test_celery_task \
            "
