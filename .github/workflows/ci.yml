name: Backend CI

on:
  push:
    branches: [ main, 'feature/*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: nexus
          POSTGRES_PASSWORD: pass01
          POSTGRES_DB: social_media
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U nexus -d social_media"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t backend-test .
      
      - name: Install redis-cli
        run: sudo apt-get update && sudo apt-get install -y redis-tools

      - name: Wait for Postgres, Redis, and RabbitMQ to be ready
        run: |
          # Wait for Postgres
          until pg_isready -h localhost -p 5432 -U nexus; do echo "Waiting for Postgres..."; sleep 2; done
          # Wait for Redis
          until redis-cli -h localhost ping | grep PONG; do echo "Waiting for Redis..."; sleep 2; done
          # Wait for RabbitMQ
          until nc -z localhost 5672; do echo "Waiting for RabbitMQ..."; sleep 2; done

      - name: Run migrations
        run: |
          docker run --rm \
            -e POSTGRES_USER=nexus \
            -e POSTGRES_PASSWORD=pass01 \
            -e POSTGRES_DB=social_media \
            -e DATABASE_HOST=postgres \
            -e DATABASE_HOST=postgres \ 
            -e REDIS_URL=redis://redis:6379/0 \
            -e CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
            backend-test \
            python manage.py migrate

      - name: Run Django tests
        run: |
          docker run --rm \
            -e POSTGRES_USER=nexus \
            -e POSTGRES_PASSWORD=pass01 \
            -e POSTGRES_DB=social_media \
            -e DATABASE_HOST=postgres \
            backend-test \
            python manage.py test

      - name: Run Celery test task
        run: |
          docker run --rm \
            -e POSTGRES_USER=nexus \
            -e POSTGRES_PASSWORD=pass01 \
            -e POSTGRES_DB=social_media \
            -e DATABASE_HOST=postgres \
            -e CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672// \
            -e CELERY_RESULT_BACKEND=redis://redis:6379/2 \
            backend-test \
            bash -c "python manage.py migrate && celery -A social_media_feed worker --loglevel=INFO --detach && python manage.py test_celery_task"
