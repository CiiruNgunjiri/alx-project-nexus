name: Backend CI

on:
  push:
    branches: [ main, 'feature/*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: nexus
          POSTGRES_PASSWORD: testpassword   # dummy password for CI
          POSTGRES_DB: social_media
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U nexus -d social_media"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t backend-test .

      - name: Install redis-cli and curl
        run: sudo apt-get update && sudo apt-get install -y redis-tools curl

      - name: Download wait-for-it.sh
        run: |
          curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
          chmod +x wait-for-it.sh

      - name: Wait for services
        run: |
          ./wait-for-it.sh db:5432 --timeout=30 --strict -- echo "Postgres is up"
          ./wait-for-it.sh redis:6379 --timeout=30 --strict -- echo "Redis is up"
          ./wait-for-it.sh rabbitmq:5672 --timeout=30 --strict -- echo "RabbitMQ is up"

      - name: Run all tests in one container
        env:
          POSTGRES_PASSWORD: testpassword   # match service env
        run: |
          docker run --rm \
            -e POSTGRES_USER=nexus \
            -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            -e POSTGRES_DB=social_media \
            -e DATABASE_HOST=db \
            -e REDIS_URL=redis://redis:6379/0 \
            -e CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672// \
            -e CELERY_RESULT_BACKEND=redis://redis:6379/2 \
            backend-test \
            bash -c "\
              echo 'Running migrations...' && \
              python manage.py migrate && \
              echo 'Running Django tests...' && \
              python manage.py test && \
              echo 'Running Celery task tests...' && \
              celery -A social_media_feed worker --loglevel=INFO --detach && \
              python manage.py test_celery_task \
            "
