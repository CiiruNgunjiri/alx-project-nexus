services:
  web:
    build: .
    command: >
      sh -c "./wait-for-it.sh db:5432 --
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env     # ðŸ‘ˆ use env file
    depends_on:
      - db
      - redis
      - rabbitmq

  db:
    image: postgres:15
    env_file:
      - .env     # ðŸ‘ˆ use env file
    ports:
      - "5432:5432"
    volumes:
      - ./initdb-scripts:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build: .
    command: >
      sh -c "./wait-for-it.sh rabbitmq:5672 --
      celery -A social_media_feed worker --loglevel=INFO"
    volumes:
      - .:/app
    env_file:
      - .env     # ðŸ‘ˆ use env file
    depends_on:
      - rabbitmq
      - redis
      - db

volumes:
  postgres_data:
