services:
  web:
    build: .
    command: >
      sh -c "./wait-for-it.sh redis:6379 --
      python manage.py migrate &&
      gunicorn social_media_feed.wsgi:application --bind 0.0.0.0:8000 --workers 4"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    user: "${UID:-1000}:${GID:-1000}"
    networks:
      - nexus

  # db:
  #   image: postgres:15
  #   env_file:
  #     - .env
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./initdb-scripts:/docker-entrypoint-initdb.d
  #     - postgres_data:/var/lib/postgresql/data/
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - nexus

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - nexus
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - nexus

  celery:
    build: .
    command: >
      sh -c "./wait-for-it.sh rabbitmq:5672 --
      ./wait-for-it.sh redis:6379 --
      celery -A social_media_feed worker --loglevel=INFO"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - nexus

  celery-beat:
    build: .
    command: >
      sh -c "./wait-for-it.sh rabbitmq:5672 --
      ./wait-for-it.sh redis:6379 --
      celery -A social_media_feed beat --loglevel=INFO"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - nexus

volumes:
  postgres_data:

networks:
  nexus:
    driver: bridge
